{
  "openrpc": "1.2.6",
  "info": {
    "title": "Osnova Component/Host OpenRPC",
    "version": "0.1.0",
    "description": "OpenRPC interface for Osnova host control and component interaction (MVP)."
  },
  "servers": [
    { "name": "local", "url": "http://localhost:8080/rpc" }
  ],
  "methods": [
    {
      "name": "apps.list",
      "summary": "List available applications",
      "params": [],
      "result": { "name": "apps", "schema": { "type": "array", "items": { "type": "object", "properties": { "id": {"type": "string"}, "name": {"type": "string"}, "version": {"type": "string"} }, "required": ["id","name","version"] } } }
    },
    {
      "name": "apps.launch",
      "summary": "Launch an application by manifest id",
      "params": [ { "name": "appId", "schema": { "type": "string" } } ],
      "result": { "name": "status", "schema": { "type": "object", "properties": { "accepted": {"type": "boolean"} }, "required": ["accepted"] } },
      "errors": [
        { "code": -32001, "message": "NotFound", "data": { "code": "not_found", "target": "appId" } },
        { "code": -32000, "message": "ValidationError", "data": { "code": "validation_error" } }
      ]
    },
    {
      "name": "config.setServer",
      "summary": "Set server address for Client-Server mode",
      "params": [ { "name": "address", "schema": { "type": "string" } } ],
      "result": { "name": "ok", "schema": { "type": "boolean" } },
      "errors": [
        { "code": -32000, "message": "ValidationError", "data": { "code": "validation_error", "fields": {"address": "invalid"} } },
        { "code": -32002, "message": "Unavailable", "data": { "code": "unavailable" } }
      ]
    },
    {
      "name": "pairing.start",
      "summary": "Initiate pairing with a server",
      "params": [],
      "result": { "name": "pairing", "schema": { "type": "object", "properties": { "sessionId": {"type": "string"} }, "required": ["sessionId"] } },
      "errors": [
        { "code": -32002, "message": "Unavailable", "data": { "code": "unavailable" } },
        { "code": -32000, "message": "ValidationError", "data": { "code": "validation_error" } }
      ]
    },
    {
      "name": "search.query",
      "summary": "Search omnibox",
      "params": [ { "name": "q", "schema": { "type": "string" } } ],
      "result": { "name": "results", "schema": { "type": "array", "items": { "type": "object", "properties": { "type": {"type": "string"}, "title": {"type": "string"}, "id": {"type": "string"} }, "required": ["type","title"] } } }
    },
    {
      "name": "files.list",
      "summary": "List files",
      "params": [],
      "result": { "name": "files", "schema": { "type": "array", "items": { "type": "object", "properties": { "name": {"type": "string"}, "path": {"type": "string"} }, "required": ["name","path"] } } }
    }
,
    {
      "name": "status.get",
      "summary": "Get host/server status",
      "params": [],
      "result": {
        "name": "status",
        "schema": {
          "type": "object",
          "properties": {
            "status": {"type": "string", "enum": ["ok", "degraded", "error"]},
            "version": {"type": "string"},
            "uptime": {"type": "integer"},
            "components": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {"type": "string"},
                  "status": {"type": "string", "enum": ["ok", "degraded", "error"]}
                },
                "required": ["name", "status"]
              }
            }
          },
          "required": ["status", "version", "uptime"]
        }
      },
      "errors": [
        { "code": -32002, "message": "Unavailable", "data": { "code": "unavailable" } }
      ]
    }
,
    {
      "name": "ui.setTheme",
      "summary": "Set theme mode",
      "params": [ { "name": "mode", "schema": { "type": "string", "enum": ["light","dark","system"] } } ],
      "result": { "name": "ok", "schema": { "type": "boolean" } }
    },
    {
      "name": "ui.getTheme",
      "summary": "Get current theme mode",
      "params": [],
      "result": { "name": "mode", "schema": { "type": "string", "enum": ["light","dark","system"] } }
    },
    {
      "name": "nav.setBottomMenu",
      "summary": "Configure bottom 5-icon menu (mobile)",
      "params": [ { "name": "items", "schema": { "type": "array", "items": { "type": "string" }, "maxItems": 5 } } ],
      "result": { "name": "ok", "schema": { "type": "boolean" } }
    },
    {
      "name": "nav.switchTab",
      "summary": "Switch active app tab (mobile)",
      "params": [ { "name": "index", "schema": { "type": "integer", "minimum": 0, "maximum": 4 } } ],
      "result": { "name": "ok", "schema": { "type": "boolean" } }
,
    {
      "name": "identity.status",
      "summary": "Report identity initialization state",
      "params": [],
      "result": { "name": "identity", "schema": { "type": "object", "properties": { "initialized": {"type": "boolean"}, "identityId": {"type": "string"} }, "required": ["initialized"] } }
    },
    {
      "name": "identity.importWithPhrase",
      "summary": "Import identity using a saorsa-core 4-word phrase",
      "params": [ { "name": "phrase", "schema": { "type": "string" } }, { "name": "displayName", "schema": { "type": "string" } } ],
      "result": { "name": "ok", "schema": { "type": "object", "properties": { "accepted": {"type": "boolean"}, "identityId": {"type": "string"} }, "required": ["accepted"] } }
    },
    {
      "name": "identity.create",
      "summary": "Create a new identity via saorsa-core",
      "params": [ { "name": "displayName", "schema": { "type": "string" } } ],
      "result": { "name": "ok", "schema": { "type": "object", "properties": { "accepted": {"type": "boolean"}, "identityId": {"type": "string"} }, "required": ["accepted"] } }
    }

  ]
}

